# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net


trigger:
- master

pool:
  vmImage: 'windows-latest'


variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


stages:
- stage: Build
  jobs:
  - job : Initial_Build
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        # zipAfterPublish: True 

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        



####################

# stages:
# - stage: Build
#   jobs:
#   - job : Initial_Build
#     steps:
#     - task: NuGetToolInstaller@1

#     - task: NuGetCommand@2
#       inputs:
#         restoreSolution: '$(solution)'

#     - task: VSBuild@1
#       inputs:
#         solution: '$(solution)'
#         platform: '$(buildPlatform)'
#         configuration: '$(buildConfiguration)'

#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(system.defaultworkingdirectory)'
#         Contents: '**\bin\$(BuildConfiguration)\**'
#         TargetFolder: '$(build.artifactstagingdirectory)'

#     - task: PublishPipelineArtifact@1
#       inputs:
#         targetPath: '$(Pipeline.Workspace)'
#         artifact: 'aspcrudapp'
#         publishLocation: 'pipeline'



# - stage : Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   jobs:  
#   - deployment: VMDeploy
#     displayName: web
#     environment:
#       name: WindowsServerVM
#       resourceType: VirtualMachine
#     strategy: 
#       runOnce:
#           deploy:
#             steps:
#             - task: CopyFiles@2
#               inputs:
#                 SourceFolder: '$(Pipeline.Workspace)/aspcrudapp/s/RazorPagesMovie/bin/Release/netcoreapp3.1'
#                 Contents: '**'
#                 TargetFolder: 'D:\AspNetApp'
#                 OverWrite: true
#             - task: PowerShell@2
#               inputs:
#                 targetType: 'inline'
#                 script: 'Get-WebBinding -Port 80 -Name "Default Web Site" | Remove-WebBinding'
#                 errorActionPreference: 'silentlyContinue'



# - stage: IIS_Deployment
#   jobs:
#   - job : IIS_Deployment
#     steps:
#     - task: IISWebAppMgmt@3
#       inputs:
#         machinesList: '40.69.145.189'
#         AdminUserName: 'Anshuman'
#         AdminPassword: '$(AzureVMPass)'
#         WinRMProtocol: 'Https'
#         IISDeploymentType: 'IISWebsite'
#         ActionIISWebsite: 'CreateOrUpdateWebsite'
#         WebsiteName: 'RazorPagesMovie'
#         WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
#         WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
#         AddBinding: true
#         CreateOrUpdateAppPoolForWebsite: true
#         ConfigureAuthenticationForWebsite: true
#         Protocol: 'http'
#         IPAddress: 'All Unassigned'
#         Port: '80'
#         AppPoolNameForWebsite: 'RazorPagesMoviePool'
#         DotNetVersionForWebsite: 'v4.0'
#         PipeLineModeForWebsite: 'Integrated'
#         AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
#         AnonymousAuthenticationForWebsite: true
#         WindowsAuthenticationForWebsite: false

#     - task: IISWebAppDeploy@2
#       inputs:
#         machinesList: '40.69.145.189'
#         AdminUserName: 'Anshuman'
#         AdminPassword: '$(AzureVMPass)'
#         WinRMProtocol: 'Https'
#         WebDeployPackage: 'D:\AspNetApp'
#         WebsiteName: 'RazorPagesMovie'


#     - task: IISWebAppMgmt@3
#       inputs:
#         machinesList: '40.69.145.189'
#         AdminUserName: 'Anshuman'
#         AdminPassword: '$(AzureVMPass)'
#         WinRMProtocol: 'Https'
#         IISDeploymentType: 'IISWebsite'
#         ActionIISWebsite: 'StartWebsite'
#         StartStopWebsiteName: 'RazorPagesMovie'












# - task: AzurePowerShell@5
#   inputs:
#     azureSubscription: 'Visual Studio Enterprise – MPN (da791a4e-3933-4213-a43e-f94f3e2187c3)'
#     ScriptType: 'InlineScript'
#     Inline: 'Get-WebBinding -Port 80 -Name "Default Web Site" | Remove-WebBinding'
#     azurePowerShellVersion: 'LatestVersion'

# - task: IISWebAppDeploymentOnMachineGroup@0
#   inputs:
#     WebSiteName: 'RazorPagesMovie'
#     Package: '$(Pipeline.Workspace)/aspcrudapp/s/RazorPagesMovie/bin/Release/netcoreapp3.1/*.zip'


# - task: IISWebAppManagementOnMachineGroup@0
#   inputs:
#     EnableIIS: true
#     IISDeploymentType: 'IISWebsite'
#     ActionIISWebsite: 'CreateOrUpdateWebsite'
#     WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
#     WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'



# - task: AzureFileCopy@4
#   inputs:
#     SourcePath: '$(Pipeline.Workspace)/aspcrudapp/s/RazorPagesMovie/bin/Release/netcoreapp3.1'
#     azureSubscription: 'Visual Studio Enterprise – MPN (da791a4e-3933-4213-a43e-f94f3e2187c3)'
#     Destination: 'AzureVMs'
#     storage: 'txwinappsdeploymentgroup'
#     resourceGroup: 'TXWINAPPSDEPLOYMENTGROUP'
#     MachineNames: 'WindowsServerVM'
#     vmsAdminUserName: 'Anshuman'
#     vmsAdminPassword: 'Admin@123456'
#     TargetPath: 'D:\AspNetApp'