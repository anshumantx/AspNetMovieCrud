# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net



trigger:
- '*'

stages:
- stage: Build
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:TransformWebConfigEnabled=false /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# - stage: DATABASE_DEPLOY
#   dependsOn: Build
#   jobs:
#   - job : DATABASE_DEPLOY
#     steps:
#     - task: SqlDacpacDeploy@2
#       inputs:
#         machinesList: '52.165.168.212'
#         AdminUserName: '$(VmUser)'
#         AdminPassword: '$(msSQLuserPswd)'
#         TaskType: 'sqlInline'
#         InlineSql: 'get ”txPiplineTestAlpha”'
#         ServerName: 'WinServerAlpha\SQLEXPRESS'
#         DatabaseName: 'txPiplineTestAlpha'
#         AuthScheme: 'sqlServerAuthentication'
#         SqlUsername: 'test'
#         SqlPassword: '1234'
#     - task: AzurePowerShell@5
#       inputs:
#         azureSubscription: 'Visual Studio Enterprise – MPN (da791a4e-3933-4213-a43e-f94f3e2187c3)'
#         ScriptType: 'InlineScript'
#         Inline: 'sqlcmd -E -v DATABASENAME=”txPiplineTestAlpha” -i C:\Users\Anshuman\createdb.sql'
#         azurePowerShellVersion: 'LatestVersion'
#     - task: PowerShellOnTargetMachines@3
#       inputs:
#         Machines: '52.165.168.212'
#         UserName: '$(VmUser)'
#         UserPassword: '$(AzureVMPass)'
#         InlineScript: 'sqlcmd -E -v DATABASENAME=”txPiplineTestAlpha” -i C:\Users\Anshuman\createdb.sql'
#         CommunicationProtocol: 'Http'
#         AuthenticationMechanism: 'Credssp'
#         ErrorActionPreference: 'silentlyContinue'

- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: DATABASE_DEPLOY
  jobs:
  - deployment: 'DeployToDev'
    displayName: 'Deploy the web application to dev environment'
    pool:
      vmImage: 'windows-latest'
    variables:
      Parameters.IISDeploymentType: 'IISWebsite'
      Parameters.ActionIISWebsite: 'CreateOrUpdateWebsite'
      Parameters.WebsiteName: 'Default Web Site'
      Parameters.WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot\AspNetDemo'
      Parameters.AddBinding: false
      Parameters.VirtualPathForApplication: '/AspNetDemo'
      Parameters.AppPoolName: ''
      Parameters.VirtualApplication: 'AspNetDemo'
      Parameters.Package: '$(Pipeline.Workspace)\drop\*.zip'
      Parameters.RemoveAdditionalFilesFlag: true
      Parameters.TakeAppOfflineFlag: true
      Parameters.XmlTransformation: true
      Parameters.XmlVariableSubstitution: true
    environment: 
      name: WindowsServerVM
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: 'sqlcmd -E -v DATABASENAME=”txPiplineTestAlpha” -i C:\Users\Anshuman\createdb.sql'
              errorActionPreference: 'continue'

          - task: IISWebAppManagementOnMachineGroup@0
            displayName: 'IIS Web App Manage'
            inputs:
              IISDeploymentType: '$(Parameters.IISDeploymentType)'
              ActionIISWebsite: '$(Parameters.ActionIISWebsite)'
              WebsiteName: '$(Parameters.WebsiteName)'
              WebsitePhysicalPath: '$(Parameters.WebsitePhysicalPath)'
              AddBinding: $(Parameters.AddBinding)
              ParentWebsiteNameForVD: '$(Parameters.WebsiteName)'
              VirtualPathForVD: '$(Parameters.VirtualPathForApplication)'
              ParentWebsiteNameForApplication: '$(Parameters.WebsiteName)'
              VirtualPathForApplication: '$(Parameters.VirtualPathForApplication)'
              AppPoolName: '$(Parameters.AppPoolName)'

          - task: IISWebAppDeploymentOnMachineGroup@0
            displayName: 'IIS Web App Deploy'
            inputs:
              WebSiteName: '$(Parameters.WebsiteName)'
              VirtualApplication: '$(Parameters.VirtualApplication)'
              Package: '$(Parameters.Package)'
              RemoveAdditionalFilesFlag: $(Parameters.RemoveAdditionalFilesFlag)
              TakeAppOfflineFlag: $(Parameters.TakeAppOfflineFlag)
              XmlTransformation: $(Parameters.XmlTransformation)
              XmlVariableSubstitution: $(Parameters.XmlVariableSubstitution)


# This is a one time job 

          - task: MysqlDeploymentOnMachineGroup@1
            inputs:
              TaskNameSelector: 'InlineSqlTask'
              SqlInline: 'sqlcmd -E -v DATABASENAME=”txtestbeta” -i C:\Users\Anshuman\createdb.sql'
              ServerName: 'WinServerAlpha\\SQLEXPRESS'
              DatabaseName: 'TxTest!'
              SqlUsername: 'test'
              SqlPassword: '$(msSQLuserPswd)'




# trigger:
# - master

# pool:
#   vmImage: 'windows-latest'


# variables:
#   solution: '**/*.sln'
#   buildPlatform: 'Any CPU'
#   buildConfiguration: 'Release'


# stages:
# - stage: Build
#   jobs:
#   - job : Initial_Build
#     steps:
#     - task: DotNetCoreCLI@2
#       inputs:
#         command: publish
#         publishWebProjects: True
#         arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#         # zipAfterPublish: True 

#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#         ArtifactName: 'drop'
#         publishLocation: 'Container'
        



####################

# stages:
# - stage: Build
#   jobs:
#   - job : Initial_Build
#     steps:
#     - task: NuGetToolInstaller@1

#     - task: NuGetCommand@2
#       inputs:
#         restoreSolution: '$(solution)'

#     - task: VSBuild@1
#       inputs:
#         solution: '$(solution)'
#         platform: '$(buildPlatform)'
#         configuration: '$(buildConfiguration)'

#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(system.defaultworkingdirectory)'
#         Contents: '**\bin\$(BuildConfiguration)\**'
#         TargetFolder: '$(build.artifactstagingdirectory)'

#     - task: PublishPipelineArtifact@1
#       inputs:
#         targetPath: '$(Pipeline.Workspace)'
#         artifact: 'aspcrudapp'
#         publishLocation: 'pipeline'



# - stage : Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   jobs:  
#   - deployment: VMDeploy
#     displayName: web
#     environment:
#       name: WindowsServerVM
#       resourceType: VirtualMachine
#     strategy: 
#       runOnce:
#           deploy:
#             steps:
#             - task: CopyFiles@2
#               inputs:
#                 SourceFolder: '$(Pipeline.Workspace)/aspcrudapp/s/RazorPagesMovie/bin/Release/netcoreapp3.1'
#                 Contents: '**'
#                 TargetFolder: 'D:\AspNetApp'
#                 OverWrite: true
#             - task: PowerShell@2
#               inputs:
#                 targetType: 'inline'
#                 script: 'Get-WebBinding -Port 80 -Name "Default Web Site" | Remove-WebBinding'
#                 errorActionPreference: 'silentlyContinue'



# - stage: IIS_Deployment
#   jobs:
#   - job : IIS_Deployment
#     steps:
#     - task: IISWebAppMgmt@3
#       inputs:
#         machinesList: '40.69.145.189'
#         AdminUserName: 'Anshuman'
#         AdminPassword: '$(AzureVMPass)'
#         WinRMProtocol: 'Https'
#         IISDeploymentType: 'IISWebsite'
#         ActionIISWebsite: 'CreateOrUpdateWebsite'
#         WebsiteName: 'RazorPagesMovie'
#         WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
#         WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
#         AddBinding: true
#         CreateOrUpdateAppPoolForWebsite: true
#         ConfigureAuthenticationForWebsite: true
#         Protocol: 'http'
#         IPAddress: 'All Unassigned'
#         Port: '80'
#         AppPoolNameForWebsite: 'RazorPagesMoviePool'
#         DotNetVersionForWebsite: 'v4.0'
#         PipeLineModeForWebsite: 'Integrated'
#         AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
#         AnonymousAuthenticationForWebsite: true
#         WindowsAuthenticationForWebsite: false

#     - task: IISWebAppDeploy@2
#       inputs:
#         machinesList: '40.69.145.189'
#         AdminUserName: 'Anshuman'
#         AdminPassword: '$(AzureVMPass)'
#         WinRMProtocol: 'Https'
#         WebDeployPackage: 'D:\AspNetApp'
#         WebsiteName: 'RazorPagesMovie'


#     - task: IISWebAppMgmt@3
#       inputs:
#         machinesList: '40.69.145.189'
#         AdminUserName: 'Anshuman'
#         AdminPassword: '$(AzureVMPass)'
#         WinRMProtocol: 'Https'
#         IISDeploymentType: 'IISWebsite'
#         ActionIISWebsite: 'StartWebsite'
#         StartStopWebsiteName: 'RazorPagesMovie'












# - task: AzurePowerShell@5
#   inputs:
#     azureSubscription: 'Visual Studio Enterprise – MPN (da791a4e-3933-4213-a43e-f94f3e2187c3)'
#     ScriptType: 'InlineScript'
#     Inline: 'Get-WebBinding -Port 80 -Name "Default Web Site" | Remove-WebBinding'
#     azurePowerShellVersion: 'LatestVersion'

# - task: IISWebAppDeploymentOnMachineGroup@0
#   inputs:
#     WebSiteName: 'RazorPagesMovie'
#     Package: '$(Pipeline.Workspace)/aspcrudapp/s/RazorPagesMovie/bin/Release/netcoreapp3.1/*.zip'


# - task: IISWebAppManagementOnMachineGroup@0
#   inputs:
#     EnableIIS: true
#     IISDeploymentType: 'IISWebsite'
#     ActionIISWebsite: 'CreateOrUpdateWebsite'
#     WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
#     WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'



# - task: AzureFileCopy@4
#   inputs:
#     SourcePath: '$(Pipeline.Workspace)/aspcrudapp/s/RazorPagesMovie/bin/Release/netcoreapp3.1'
#     azureSubscription: 'Visual Studio Enterprise – MPN (da791a4e-3933-4213-a43e-f94f3e2187c3)'
#     Destination: 'AzureVMs'
#     storage: 'txwinappsdeploymentgroup'
#     resourceGroup: 'TXWINAPPSDEPLOYMENTGROUP'
#     MachineNames: 'WindowsServerVM'
#     vmsAdminUserName: 'Anshuman'
#     vmsAdminPassword: 'Admin@123456'
#     TargetPath: 'D:\AspNetApp'